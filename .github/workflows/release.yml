name: Release

on:
  release:
    types: [published]
  workflow_call:

jobs:
  create_release:
    if: ${{ !(github.event_name == 'release' && github.event.action == 'published') }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache dev-py environment
        uses: actions/cache@v3
        with:
          path: .venv_vizzu_story
          key: dev-py-${{ hashFiles('dev-requirements.txt') }}

      - name: Init dev-py environment
        run: |
          make check-dev-py
          make dev-py

      - name: Cache dev-js environment
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dev-js-${{ hashFiles('package-lock.json') }}

      - name: Init dev-js environment
        run: |
          make check-dev-js
          make dev-js

      - name: Set version
        run: make set-version

      - name: Build package
        run: npm run build

      - name: Cache release
        uses: actions/cache@v3
        with:
          path: |
            README.md
            build/
            dist/
          key: release-${{ github.run_id }}

  publish_release:
    if: ${{ (github.event_name == 'release' && github.event.action == 'published') }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache dev-py environment
        uses: actions/cache@v3
        with:
          path: .venv_vizzu_story
          key: dev-py-${{ hashFiles('dev-requirements.txt') }}

      - name: Init dev-py environment
        run: |
          make check-dev-py
          make dev-py

      - name: Cache dev-js environment
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dev-js-${{ hashFiles('package-lock.json') }}

      - name: Init dev-js environment
        run: |
          make check-dev-js
          make dev-js

      - name: Get workflow ID
        id: workflow_id
        run: |
          workflow_data=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows")
          workflow_id=$(echo $workflow_data | jq -r '.workflows[] | select(.name == "CI-CD") | .id')
          echo "workflow_id=${workflow_id}" >> $GITHUB_OUTPUT

      - name: Get run ID
        id: run_id
        run: |
          run_data=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows/${{ steps.workflow_id.outputs.workflow_id }}/runs?branch=main")
          run_id=$(echo $run_data | jq -r '.workflow_runs[0].id')
          echo "run_id=${run_id}" >> $GITHUB_OUTPUT

      - name: Cache release
        uses: actions/cache@v3
        with:
          path: |
            README.md
            build/
            dist/
          key: release-${{ steps.run_id.outputs.run_id }}

      - name: Release package
        run: |
          npm config set registry=https://registry.npmjs.org/
          npm config set //registry.npmjs.org/:_authToken=${NPM_API_TOKEN}
          npm publish
        env:
          NPM_API_TOKEN: ${{ secrets.NPM_API_TOKEN }}

      - name: Upload package
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh release upload ${{ github.event.release.tag_name }} build/*tgz --clobber
